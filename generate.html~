<script type="text/javascript">
<!--

var holds = [
  [117, 19, 148, 49, "A1"],
  [155, 123, 191, 159, "A2"]
];

var state = [];

// 0 - starting holds
// 1 - normal holds
// 2 - top

var holdType = 1;

function startHolds() { holdType = 0; }
function mainHolds() { holdType = 1; }
function topHold() { holdType = 2; }

function drawInitial(img) {
  var canvas = document.querySelector("canvas")
  canvas.width = 500;
  canvas.height = 500;
  var cx = canvas.getContext("2d");
  img.addEventListener("load", function() {
    cx.drawImage(img, 0, 0);  
  });
  return canvas;
}

function color(ht, ctx) {
  if(ht==0) {
    ctx.strokeStyle="#ff0000";
  } else if(ht==1){
    ctx.strokeStyle="#0000ff";
  } else if(ht==2){
    ctx.strokeStyle="#ffff00";
  }
}

function draw(hold, ht, ctx, img) {
  img.addEventListener("load", function() {
    color(ht, ctx);
    ctx.rect(hold[0], hold[1], hold[2] - hold[0], hold[3]-hold[1]);
    ctx.stroke();
  })
}

function drawState() {
  var img = document.createElement("img");
  img.src = "steepboard.png";

  var ctx = drawInitial(img).getContext("2d");
  state.forEach(function(el){draw(holds[el[0]], el[1], ctx, img);});
}

function highlightHold(x, y)
{
  var maybeHold = holds.findIndex(function(hold) {
    return x >= hold[0] && x < hold[2] && y >= hold[1] && y < hold[3]
  });
  if(maybeHold > -1) {
    var maybeStateIndex = state.findIndex(function(el){return el[0] == maybeHold});
    if(maybeStateIndex > -1) {
      state.splice(maybeStateIndex, 1);
    } else {
      state.push([maybeHold, holdType]);
    }
    
    drawState();
//    document.getElementById("x").innerHTML = x;
//    document.getElementById("y").innerHTML = y;
  }
}

function holdsMark(event){
    var totalOffsetX = 0;
    var totalOffsetY = 0;
    var canvasX = 0;
    var canvasY = 0;
    var currentElement = this;

    do{
        totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;
        totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;
    }
    while(currentElement = currentElement.offsetParent)

    canvasX = event.pageX - totalOffsetX;
    canvasY = event.pageY - totalOffsetY;

    highlightHold(canvasX, canvasY);
}

function publish(){

   FB.getLoginStatus(function(response) { 
            if(!(response.status === 'connected')){
                location.href = './fb-login.html';
                } else {
                    uID = response.authResponse.userID;
                    accessToken = response.authResponse.accessToken;
            FB.api('/me', {fields: 'last_name'}, {  access_token : accessToken } ,function(response) {
                console.log(response);
            });

                }

            });

            console.log(FB.getAuthResponse());

        }


//FB.api(
//    "/169418077166205/photos",
//    "POST",
//    {
//        "url": "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/PM5544_with_non-PAL_signals.png/384px-PM5544_with_non-PAL_signals.png"
//    },
//    function (response) {
//document.getElementById("y").innerHTML = response;
//      if (response && !response.error) {
        /* handle the result */
//      }
//    }
//);
}

//-->
</script>

<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId            : '143000969707112',
      autoLogAppEvents : true,
      status: true,
      cookie: true,
      xfbml            : true,
      version          : 'v2.11'
    });
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "https://connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));


</script>


<canvas></canvas>
 <!-- <img id="myImgId" alt="" src="steepboard.png" width="400" height="300" /> -->
<script type="text/javascript">
<!--
  var img = document.createElement("img");
  img.src = "steepboard.png";

    var canvas = drawInitial(img);
canvas.onmousedown = holdsMark;
//-->
</script>
<p>XXXX:<span id="x"></span></p>
<p>Y:<span id="y"></span></p>

<button onclick="startHolds()">Start holds</button>
<button onclick="mainHolds()">Main holds</button>
<button onclick="topHold()">Top</button>
<button onclick="publish()">publish</button>

